---
name: Test CreateUser

on:
  pull_request:
    branches: [ main ]
    types:
      - closed

jobs:
  build_after_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven
      - name: test & build with Maven
        run: mvn --batch-mode --update-snapshots package
      - name: packer build
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          DEMO_AWS_ACCESS_KEY_ID: ${{ secrets.DEMO_AWS_ACCESS_KEY_ID }}
#          DEMO_AWS_SECRET_ACCESS_KEY: ${{ secrets.DEMO_AWS_SECRET_ACCESS_KEY }}
#          DEV_AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
#          DEV_AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          PACKER_LOG: 1
#        run: |
#          packer fmt ./packer && packer init ./packer
#          packer build ./packer
        run:
          packer validate ./packer && packer build ./packer
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.DEMO_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEMO_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.DEMO_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEMO_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: New Launching Template Version & Refresh
        run: |
          IMAGE_ID=$(aws ec2 describe-images --filters "Name=name,Values=yumeng_*" --query 'sort_by(Images, &CreationDate)[-1].ImageId' --output text)
          echo "latest ami id:"
          echo $IMAGE_ID
          LAUNCH_TEMPLATE_ID=$(aws ec2 describe-launch-templates --query 'LaunchTemplates[0].LaunchTemplateId' --output text)
          echo "launched template id:"
          echo $LAUNCH_TEMPLATE_ID
          aws ec2 create-launch-template-version --launch-template-id $LAUNCH_TEMPLATE_ID --version-description new_version --source-version 1 --launch-template-data "{\"ImageId\":\"${IMAGE_ID}\"}"
#         aws ec2 create-launch-template-version --launch-template-id $LT_ID --version-description WebVersion2 --source-version 1 --launch-template-data "ImageId=$AMI_ID"
          aws autoscaling start-instance-refresh --auto-scaling-group-name csye6225-asg-spring2023

